--------------------------------------------------------
--  파일이 생성됨 - 수요일-11월-20-2019   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence PAYMENT_UID
--------------------------------------------------------

   CREATE SEQUENCE  "MDGUEST"."PAYMENT_UID"  MINVALUE 1 MAXVALUE 1000 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RESERVATION_NUM
--------------------------------------------------------

   CREATE SEQUENCE  "MDGUEST"."RESERVATION_NUM"  MINVALUE 1 MAXVALUE 1000 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TICKET_NUM
--------------------------------------------------------

   CREATE SEQUENCE  "MDGUEST"."TICKET_NUM"  MINVALUE 1 MAXVALUE 1000 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table CUSTOMER
--------------------------------------------------------

  CREATE TABLE "MDGUEST"."CUSTOMER" 
   (	"CUSTOMER_ID" VARCHAR2(20 BYTE), 
	"CUSTOMER_PW" VARCHAR2(8 BYTE), 
	"CUSTOMER_NAME" VARCHAR2(30 BYTE), 
	"CUSTOMER_TEL" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MDGUEST"."CUSTOMER"."CUSTOMER_ID" IS '아이디';
   COMMENT ON COLUMN "MDGUEST"."CUSTOMER"."CUSTOMER_PW" IS '비밀번호';
   COMMENT ON COLUMN "MDGUEST"."CUSTOMER"."CUSTOMER_NAME" IS '이름';
   COMMENT ON COLUMN "MDGUEST"."CUSTOMER"."CUSTOMER_TEL" IS '전화번호';
   COMMENT ON TABLE "MDGUEST"."CUSTOMER"  IS '회원가입 정보 테이블';
--------------------------------------------------------
--  DDL for Table CUSTOMER_LOG
--------------------------------------------------------

  CREATE TABLE "MDGUEST"."CUSTOMER_LOG" 
   (	"CUSTOMER_ID" VARCHAR2(20 BYTE), 
	"CUSTOMER_PW" VARCHAR2(20 BYTE), 
	"CUSTOMER_NAME" VARCHAR2(50 BYTE), 
	"CUSTOMER_TEL" VARCHAR2(50 BYTE), 
	"CUSTOMER_LOGDATE" DATE DEFAULT SYSDATE, 
	"JOB_GUBUN" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table HALL_INFO
--------------------------------------------------------

  CREATE TABLE "MDGUEST"."HALL_INFO" 
   (	"CONCERT_NUM" NUMBER, 
	"HALL_LOCATION" VARCHAR2(100 BYTE), 
	"SEAT_SUM" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MDGUEST"."HALL_INFO"."CONCERT_NUM" IS '콘서트번호';
   COMMENT ON COLUMN "MDGUEST"."HALL_INFO"."HALL_LOCATION" IS '콘서트위치';
   COMMENT ON COLUMN "MDGUEST"."HALL_INFO"."SEAT_SUM" IS '총좌석수';
--------------------------------------------------------
--  DDL for Table PAYMENT
--------------------------------------------------------

  CREATE TABLE "MDGUEST"."PAYMENT" 
   (	"PAYMENT_UID" NUMBER, 
	"CUSTOMER_ID" VARCHAR2(20 BYTE), 
	"PAYMENT_CREDIT" VARCHAR2(10 BYTE), 
	"TOTAL_PRICE" NUMBER, 
	"PAYMENT_DATE" DATE, 
	"RESERVATION_NUM" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MDGUEST"."PAYMENT"."PAYMENT_UID" IS 'NEXTVAL';
   COMMENT ON COLUMN "MDGUEST"."PAYMENT"."CUSTOMER_ID" IS '아이디';
   COMMENT ON COLUMN "MDGUEST"."PAYMENT"."PAYMENT_CREDIT" IS '결제방법';
   COMMENT ON COLUMN "MDGUEST"."PAYMENT"."TOTAL_PRICE" IS '결제금액';
   COMMENT ON COLUMN "MDGUEST"."PAYMENT"."PAYMENT_DATE" IS '결제일자';
   COMMENT ON COLUMN "MDGUEST"."PAYMENT"."RESERVATION_NUM" IS 'NEXTVAL';
   COMMENT ON TABLE "MDGUEST"."PAYMENT"  IS '결제정보 테이블';
--------------------------------------------------------
--  DDL for Table PAYMENT_LOG
--------------------------------------------------------

  CREATE TABLE "MDGUEST"."PAYMENT_LOG" 
   (	"PAYMENT_UID" NUMBER, 
	"CUSTOMER_ID" VARCHAR2(20 BYTE), 
	"PAYMENT_CREDIT" VARCHAR2(10 BYTE), 
	"TOTAL_PRICE" NUMBER, 
	"PAYMENT_DATE" DATE, 
	"RESERVATION_NUM" NUMBER, 
	"LOGDATE" DATE DEFAULT SYSDATE, 
	"IUD" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SCHEDULE_INFO
--------------------------------------------------------

  CREATE TABLE "MDGUEST"."SCHEDULE_INFO" 
   (	"CONCERT_DATE" DATE, 
	"CONCERT_NUM" NUMBER, 
	"HALL_NUM" NUMBER, 
	"CONCERT_NAME" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MDGUEST"."SCHEDULE_INFO"."CONCERT_DATE" IS '콘서트일자';
   COMMENT ON COLUMN "MDGUEST"."SCHEDULE_INFO"."CONCERT_NUM" IS '콘서트번호';
   COMMENT ON COLUMN "MDGUEST"."SCHEDULE_INFO"."HALL_NUM" IS '콘서트홀번호';
   COMMENT ON COLUMN "MDGUEST"."SCHEDULE_INFO"."CONCERT_NAME" IS '콘서트제목';
   COMMENT ON TABLE "MDGUEST"."SCHEDULE_INFO"  IS '콘서트 스케쥴';
--------------------------------------------------------
--  DDL for Table SEAT_INFO
--------------------------------------------------------

  CREATE TABLE "MDGUEST"."SEAT_INFO" 
   (	"CUSTOMER_ID" VARCHAR2(20 BYTE), 
	"SEAT_NUM" VARCHAR2(20 BYTE), 
	"SEAT_GRADE" VARCHAR2(20 BYTE), 
	"CONCERT_NUM" NUMBER, 
	"SEAT_PRICE" NUMBER, 
	"HAVESEAT" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MDGUEST"."SEAT_INFO"."SEAT_NUM" IS '좌석번호';
   COMMENT ON COLUMN "MDGUEST"."SEAT_INFO"."SEAT_GRADE" IS '좌석등급';
   COMMENT ON COLUMN "MDGUEST"."SEAT_INFO"."CONCERT_NUM" IS '콘서트번호';
   COMMENT ON COLUMN "MDGUEST"."SEAT_INFO"."SEAT_PRICE" IS '좌석금액';
   COMMENT ON COLUMN "MDGUEST"."SEAT_INFO"."HAVESEAT" IS '좌석배정유무';
--------------------------------------------------------
--  DDL for Table TICKET
--------------------------------------------------------

  CREATE TABLE "MDGUEST"."TICKET" 
   (	"TICKET_NUM" NUMBER, 
	"PAYMENT_UID" NUMBER, 
	"CONCERT_DATE" DATE, 
	"CONCERT_NAME" VARCHAR2(100 BYTE), 
	"CONCERT_NUM" NUMBER, 
	"HALL_NUM" NUMBER, 
	"SEAT_NUM" VARCHAR2(20 BYTE), 
	"SEAT_PRICE" NUMBER, 
	"CUSTOMER_ID" VARCHAR2(20 BYTE), 
	"RESERVATION_NUM" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MDGUEST"."TICKET"."TICKET_NUM" IS 'NEXTVAL';
   COMMENT ON COLUMN "MDGUEST"."TICKET"."PAYMENT_UID" IS '결제번호';
   COMMENT ON COLUMN "MDGUEST"."TICKET"."CONCERT_DATE" IS '콘서트일자';
   COMMENT ON COLUMN "MDGUEST"."TICKET"."CONCERT_NUM" IS '콘서트번호';
   COMMENT ON COLUMN "MDGUEST"."TICKET"."HALL_NUM" IS '콘서트홀번호';
   COMMENT ON COLUMN "MDGUEST"."TICKET"."SEAT_NUM" IS '좌석번호';
   COMMENT ON COLUMN "MDGUEST"."TICKET"."SEAT_PRICE" IS '좌석금액';
   COMMENT ON COLUMN "MDGUEST"."TICKET"."CUSTOMER_ID" IS '아이디';
   COMMENT ON COLUMN "MDGUEST"."TICKET"."RESERVATION_NUM" IS '예매번호';
   COMMENT ON TABLE "MDGUEST"."TICKET"  IS '티켓 예매 후 화면';
REM INSERTING into MDGUEST.CUSTOMER
SET DEFINE OFF;
Insert into MDGUEST.CUSTOMER (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL) values ('hong9','1234','홍구','010-9919-9999');
Insert into MDGUEST.CUSTOMER (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL) values ('hong8','1234','홍팔','010-8888-7777');
Insert into MDGUEST.CUSTOMER (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL) values ('TEST1','0000','TEST1','010-0000-0000');
Insert into MDGUEST.CUSTOMER (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL) values ('TEST2','0000','TEST2','010-1111-1111');
Insert into MDGUEST.CUSTOMER (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL) values ('TEST3','0000','TEST3','010-2222-2222');
Insert into MDGUEST.CUSTOMER (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL) values ('TEST4','0000','TEST4','010-3333-3333');
Insert into MDGUEST.CUSTOMER (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL) values ('TEST5','0000','TEST5','010-4444-4444');
Insert into MDGUEST.CUSTOMER (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL) values ('TEST6','0000','TEST6','010-5555-5555');
Insert into MDGUEST.CUSTOMER (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL) values ('TEST7','0000','TEST7','010-6666-6666');
Insert into MDGUEST.CUSTOMER (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL) values ('TEST8','0000','TEST8','010-7777-7777');
Insert into MDGUEST.CUSTOMER (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL) values ('TEST9','0000','TEST9','010-8888-8888');
Insert into MDGUEST.CUSTOMER (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL) values ('TEST10','0000','TEST10','010-9999-9999');
Insert into MDGUEST.CUSTOMER (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL) values ('hong1','1234','홍일','010-2929-2929');
REM INSERTING into MDGUEST.CUSTOMER_LOG
SET DEFINE OFF;
Insert into MDGUEST.CUSTOMER_LOG (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL,CUSTOMER_LOGDATE,JOB_GUBUN) values ('hong9','1234','홍구','010-9919-9999',to_date('2019/11/20','YYYY/MM/DD'),'INSERT-IUD');
Insert into MDGUEST.CUSTOMER_LOG (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL,CUSTOMER_LOGDATE,JOB_GUBUN) values ('hong8','1234','홍팔','010-8888-7777',to_date('2019/11/20','YYYY/MM/DD'),'INSERT-IUD');
Insert into MDGUEST.CUSTOMER_LOG (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL,CUSTOMER_LOGDATE,JOB_GUBUN) values ('TEST1','0000','TEST1','010-0000-0000',to_date('2019/11/20','YYYY/MM/DD'),'INSERT-IUD');
Insert into MDGUEST.CUSTOMER_LOG (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL,CUSTOMER_LOGDATE,JOB_GUBUN) values ('TEST2','0000','TEST2','010-1111-1111',to_date('2019/11/20','YYYY/MM/DD'),'INSERT-IUD');
Insert into MDGUEST.CUSTOMER_LOG (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL,CUSTOMER_LOGDATE,JOB_GUBUN) values ('TEST3','0000','TEST3','010-2222-2222',to_date('2019/11/20','YYYY/MM/DD'),'INSERT-IUD');
Insert into MDGUEST.CUSTOMER_LOG (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL,CUSTOMER_LOGDATE,JOB_GUBUN) values ('TEST4','0000','TEST4','010-3333-3333',to_date('2019/11/20','YYYY/MM/DD'),'INSERT-IUD');
Insert into MDGUEST.CUSTOMER_LOG (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL,CUSTOMER_LOGDATE,JOB_GUBUN) values ('TEST5','0000','TEST5','010-4444-4444',to_date('2019/11/20','YYYY/MM/DD'),'INSERT-IUD');
Insert into MDGUEST.CUSTOMER_LOG (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL,CUSTOMER_LOGDATE,JOB_GUBUN) values ('TEST6','0000','TEST6','010-5555-5555',to_date('2019/11/20','YYYY/MM/DD'),'INSERT-IUD');
Insert into MDGUEST.CUSTOMER_LOG (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL,CUSTOMER_LOGDATE,JOB_GUBUN) values ('TEST7','0000','TEST7','010-6666-6666',to_date('2019/11/20','YYYY/MM/DD'),'INSERT-IUD');
Insert into MDGUEST.CUSTOMER_LOG (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL,CUSTOMER_LOGDATE,JOB_GUBUN) values ('TEST8','0000','TEST8','010-7777-7777',to_date('2019/11/20','YYYY/MM/DD'),'INSERT-IUD');
Insert into MDGUEST.CUSTOMER_LOG (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL,CUSTOMER_LOGDATE,JOB_GUBUN) values ('TEST9','0000','TEST9','010-8888-8888',to_date('2019/11/20','YYYY/MM/DD'),'INSERT-IUD');
Insert into MDGUEST.CUSTOMER_LOG (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL,CUSTOMER_LOGDATE,JOB_GUBUN) values ('TEST10','0000','TEST10','010-9999-9999',to_date('2019/11/20','YYYY/MM/DD'),'INSERT-IUD');
Insert into MDGUEST.CUSTOMER_LOG (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL,CUSTOMER_LOGDATE,JOB_GUBUN) values (null,'1234 > ','1234 > ','010-2828-2828 > ',to_date('2019/11/20','YYYY/MM/DD'),'DELETE-IUD');
Insert into MDGUEST.CUSTOMER_LOG (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL,CUSTOMER_LOGDATE,JOB_GUBUN) values ('hong1','1234','홍일','010-2727-2727',to_date('2019/11/20','YYYY/MM/DD'),'INSERT-IUD');
Insert into MDGUEST.CUSTOMER_LOG (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL,CUSTOMER_LOGDATE,JOB_GUBUN) values ('hong1','1234 > 1234','홍일 > 홍일','010-2727-2727 > 010-2828-2828',to_date('2019/11/20','YYYY/MM/DD'),'UPDATE-IUD');
Insert into MDGUEST.CUSTOMER_LOG (CUSTOMER_ID,CUSTOMER_PW,CUSTOMER_NAME,CUSTOMER_TEL,CUSTOMER_LOGDATE,JOB_GUBUN) values ('hong1','1234','홍일','010-2929-2929',to_date('2019/11/20','YYYY/MM/DD'),'INSERT-IUD');
REM INSERTING into MDGUEST.HALL_INFO
SET DEFINE OFF;
Insert into MDGUEST.HALL_INFO (CONCERT_NUM,HALL_LOCATION,SEAT_SUM) values (1,'1',100);
Insert into MDGUEST.HALL_INFO (CONCERT_NUM,HALL_LOCATION,SEAT_SUM) values (2,'2',100);
Insert into MDGUEST.HALL_INFO (CONCERT_NUM,HALL_LOCATION,SEAT_SUM) values (3,'3',100);
Insert into MDGUEST.HALL_INFO (CONCERT_NUM,HALL_LOCATION,SEAT_SUM) values (4,'4',100);
Insert into MDGUEST.HALL_INFO (CONCERT_NUM,HALL_LOCATION,SEAT_SUM) values (5,'5',100);
REM INSERTING into MDGUEST.PAYMENT
SET DEFINE OFF;
Insert into MDGUEST.PAYMENT (PAYMENT_UID,CUSTOMER_ID,PAYMENT_CREDIT,TOTAL_PRICE,PAYMENT_DATE,RESERVATION_NUM) values (1,'hong9','카드',150000,to_date('2019/11/20','YYYY/MM/DD'),1);
Insert into MDGUEST.PAYMENT (PAYMENT_UID,CUSTOMER_ID,PAYMENT_CREDIT,TOTAL_PRICE,PAYMENT_DATE,RESERVATION_NUM) values (2,'hong8','현금',150000,to_date('2019/11/20','YYYY/MM/DD'),2);
Insert into MDGUEST.PAYMENT (PAYMENT_UID,CUSTOMER_ID,PAYMENT_CREDIT,TOTAL_PRICE,PAYMENT_DATE,RESERVATION_NUM) values (3,'hong8','현금',150000,to_date('2019/11/20','YYYY/MM/DD'),3);
REM INSERTING into MDGUEST.PAYMENT_LOG
SET DEFINE OFF;
Insert into MDGUEST.PAYMENT_LOG (PAYMENT_UID,CUSTOMER_ID,PAYMENT_CREDIT,TOTAL_PRICE,PAYMENT_DATE,RESERVATION_NUM,LOGDATE,IUD) values (1,'hong9','카드',150000,to_date('2019/11/20','YYYY/MM/DD'),1,to_date('2019/11/20','YYYY/MM/DD'),'결제완료');
Insert into MDGUEST.PAYMENT_LOG (PAYMENT_UID,CUSTOMER_ID,PAYMENT_CREDIT,TOTAL_PRICE,PAYMENT_DATE,RESERVATION_NUM,LOGDATE,IUD) values (2,'hong8','현금',150000,to_date('2019/11/20','YYYY/MM/DD'),2,to_date('2019/11/20','YYYY/MM/DD'),'결제완료');
Insert into MDGUEST.PAYMENT_LOG (PAYMENT_UID,CUSTOMER_ID,PAYMENT_CREDIT,TOTAL_PRICE,PAYMENT_DATE,RESERVATION_NUM,LOGDATE,IUD) values (3,'hong8','현금',150000,to_date('2019/11/20','YYYY/MM/DD'),3,to_date('2019/11/20','YYYY/MM/DD'),'결제완료');
REM INSERTING into MDGUEST.SCHEDULE_INFO
SET DEFINE OFF;
Insert into MDGUEST.SCHEDULE_INFO (CONCERT_DATE,CONCERT_NUM,HALL_NUM,CONCERT_NAME) values (to_date('2019/12/25','YYYY/MM/DD'),1,1,'BTS');
Insert into MDGUEST.SCHEDULE_INFO (CONCERT_DATE,CONCERT_NUM,HALL_NUM,CONCERT_NAME) values (to_date('2019/12/25','YYYY/MM/DD'),2,2,'내일은 미스트롯');
Insert into MDGUEST.SCHEDULE_INFO (CONCERT_DATE,CONCERT_NUM,HALL_NUM,CONCERT_NAME) values (to_date('2019/12/25','YYYY/MM/DD'),3,3,'악동뮤지션');
Insert into MDGUEST.SCHEDULE_INFO (CONCERT_DATE,CONCERT_NUM,HALL_NUM,CONCERT_NAME) values (to_date('2019/12/25','YYYY/MM/DD'),4,4,'슈퍼밴드');
Insert into MDGUEST.SCHEDULE_INFO (CONCERT_DATE,CONCERT_NUM,HALL_NUM,CONCERT_NAME) values (to_date('2019/12/25','YYYY/MM/DD'),5,5,'싸이연말콘서트');
REM INSERTING into MDGUEST.SEAT_INFO
SET DEFINE OFF;
Insert into MDGUEST.SEAT_INFO (CUSTOMER_ID,SEAT_NUM,SEAT_GRADE,CONCERT_NUM,SEAT_PRICE,HAVESEAT) values ('hong9','1:vip-2','vip',1,150000,'배정됨');
Insert into MDGUEST.SEAT_INFO (CUSTOMER_ID,SEAT_NUM,SEAT_GRADE,CONCERT_NUM,SEAT_PRICE,HAVESEAT) values ('hong8','5:vip-21','vip',5,150000,'배정됨');
Insert into MDGUEST.SEAT_INFO (CUSTOMER_ID,SEAT_NUM,SEAT_GRADE,CONCERT_NUM,SEAT_PRICE,HAVESEAT) values ('hong8','5:vip-3','vip',5,150000,'배정됨');
Insert into MDGUEST.SEAT_INFO (CUSTOMER_ID,SEAT_NUM,SEAT_GRADE,CONCERT_NUM,SEAT_PRICE,HAVESEAT) values ('TEST1','VIP-25','VIP',1,150000,'배정됨');
Insert into MDGUEST.SEAT_INFO (CUSTOMER_ID,SEAT_NUM,SEAT_GRADE,CONCERT_NUM,SEAT_PRICE,HAVESEAT) values ('TEST2','SR-24','SR',2,130000,'배정됨');
Insert into MDGUEST.SEAT_INFO (CUSTOMER_ID,SEAT_NUM,SEAT_GRADE,CONCERT_NUM,SEAT_PRICE,HAVESEAT) values ('TEST3','S-23','S',3,100000,'배정됨');
Insert into MDGUEST.SEAT_INFO (CUSTOMER_ID,SEAT_NUM,SEAT_GRADE,CONCERT_NUM,SEAT_PRICE,HAVESEAT) values ('TEST4','R-22','R',4,90000,'배정됨');
Insert into MDGUEST.SEAT_INFO (CUSTOMER_ID,SEAT_NUM,SEAT_GRADE,CONCERT_NUM,SEAT_PRICE,HAVESEAT) values ('TEST5','VIP-21','VIP',5,150000,'배정됨');
Insert into MDGUEST.SEAT_INFO (CUSTOMER_ID,SEAT_NUM,SEAT_GRADE,CONCERT_NUM,SEAT_PRICE,HAVESEAT) values ('TEST6','VIP-15','VIP',1,150000,'배정됨');
Insert into MDGUEST.SEAT_INFO (CUSTOMER_ID,SEAT_NUM,SEAT_GRADE,CONCERT_NUM,SEAT_PRICE,HAVESEAT) values ('TEST7','SR-12','SR',2,130000,'배정됨');
Insert into MDGUEST.SEAT_INFO (CUSTOMER_ID,SEAT_NUM,SEAT_GRADE,CONCERT_NUM,SEAT_PRICE,HAVESEAT) values ('TEST8','S-1','S',3,100000,'배정됨');
Insert into MDGUEST.SEAT_INFO (CUSTOMER_ID,SEAT_NUM,SEAT_GRADE,CONCERT_NUM,SEAT_PRICE,HAVESEAT) values ('TEST9','R-8','R',4,90000,'배정됨');
Insert into MDGUEST.SEAT_INFO (CUSTOMER_ID,SEAT_NUM,SEAT_GRADE,CONCERT_NUM,SEAT_PRICE,HAVESEAT) values ('TEST10','VIP-11','VIP',5,150000,'배정됨');
Insert into MDGUEST.SEAT_INFO (CUSTOMER_ID,SEAT_NUM,SEAT_GRADE,CONCERT_NUM,SEAT_PRICE,HAVESEAT) values ('aaa','1:vip-1','vip',1,150000,'배정됨');
REM INSERTING into MDGUEST.TICKET
SET DEFINE OFF;
Insert into MDGUEST.TICKET (TICKET_NUM,PAYMENT_UID,CONCERT_DATE,CONCERT_NAME,CONCERT_NUM,HALL_NUM,SEAT_NUM,SEAT_PRICE,CUSTOMER_ID,RESERVATION_NUM) values (1,1,to_date('2019/12/25','YYYY/MM/DD'),'BTS',1,1,'1:vip-2',150000,'hong9',1);
Insert into MDGUEST.TICKET (TICKET_NUM,PAYMENT_UID,CONCERT_DATE,CONCERT_NAME,CONCERT_NUM,HALL_NUM,SEAT_NUM,SEAT_PRICE,CUSTOMER_ID,RESERVATION_NUM) values (2,2,to_date('2019/12/25','YYYY/MM/DD'),'싸이연말콘서트',5,5,'5:vip-21',150000,'hong8',2);
--------------------------------------------------------
--  DDL for Index SYS_C008063
--------------------------------------------------------

  CREATE UNIQUE INDEX "MDGUEST"."SYS_C008063" ON "MDGUEST"."CUSTOMER" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C008068
--------------------------------------------------------

  CREATE UNIQUE INDEX "MDGUEST"."SYS_C008068" ON "MDGUEST"."PAYMENT" ("PAYMENT_UID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C008072
--------------------------------------------------------

  CREATE UNIQUE INDEX "MDGUEST"."SYS_C008072" ON "MDGUEST"."HALL_INFO" ("CONCERT_NUM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C008076
--------------------------------------------------------

  CREATE UNIQUE INDEX "MDGUEST"."SYS_C008076" ON "MDGUEST"."SCHEDULE_INFO" ("CONCERT_NUM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C008083
--------------------------------------------------------

  CREATE UNIQUE INDEX "MDGUEST"."SYS_C008083" ON "MDGUEST"."SEAT_INFO" ("SEAT_NUM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C008094
--------------------------------------------------------

  CREATE UNIQUE INDEX "MDGUEST"."SYS_C008094" ON "MDGUEST"."TICKET" ("TICKET_NUM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger CUSTOMER_IUD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MDGUEST"."CUSTOMER_IUD" 
    AFTER INSERT OR UPDATE OR DELETE ON CUSTOMER
    FOR EACH ROW
BEGIN

    --INSERT 이벤트 발생시 로그 남기기
    IF INSERTING THEN        
        INSERT INTO CUSTOMER_LOG
            (CUSTOMER_ID, CUSTOMER_PW, CUSTOMER_NAME, CUSTOMER_TEL, JOB_GUBUN)
        VALUES (:NEW.CUSTOMER_ID, :NEW.CUSTOMER_PW, :NEW.CUSTOMER_NAME,
            :NEW.CUSTOMER_TEL, 'INSERT-IUD');
    END IF;

    --UPDATE 이벤트 발생시 로그 남기기
    IF UPDATING THEN
        INSERT INTO CUSTOMER_LOG
           (CUSTOMER_ID, CUSTOMER_PW, CUSTOMER_NAME, CUSTOMER_TEL, JOB_GUBUN)
        VALUES (:NEW.CUSTOMER_ID
             ,  :OLD.CUSTOMER_PW ||' > ' || :NEW.CUSTOMER_PW
             ,  :OLD.CUSTOMER_NAME ||' > '|| :NEW.CUSTOMER_NAME
             ,  :OLD.CUSTOMER_TEL ||' > '|| :NEW.CUSTOMER_TEL
             ,  'UPDATE-IUD');
    END IF;

    --DELETE 이벤트 발생시 로그 남기기
    IF DELETING THEN
        INSERT INTO CUSTOMER_LOG
           (CUSTOMER_ID, CUSTOMER_PW, CUSTOMER_NAME, CUSTOMER_TEL, JOB_GUBUN)
        VALUES (:NEW.CUSTOMER_ID
         ,  :OLD.CUSTOMER_PW ||' > ' || :NEW.CUSTOMER_PW
         ,  :OLD.CUSTOMER_PW ||' > '|| :NEW.CUSTOMER_PW
         ,  :OLD.CUSTOMER_TEL ||' > '|| :NEW.CUSTOMER_TEL
         ,  'DELETE-IUD');
    END IF;
END;
/
ALTER TRIGGER "MDGUEST"."CUSTOMER_IUD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_IUD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MDGUEST"."TRIGGER_IUD" 
        AFTER INSERT OR UPDATE OR DELETE ON PAYMENT
        FOR EACH ROW
BEGIN
        -- INSERT 이벤트 발생시 로그 남기기
        IF INSERTING THEN 
        INSERT INTO PAYMENT_LOG
        (PAYMENT_UID, CUSTOMER_ID, PAYMENT_CREDIT, TOTAL_PRICE, PAYMENT_DATE, RESERVATION_NUM, IUD )
        VALUES (:NEW.PAYMENT_UID, :NEW.CUSTOMER_ID, :NEW.PAYMENT_CREDIT,
                       :NEW.TOTAL_PRICE,  :NEW.PAYMENT_DATE, :NEW.RESERVATION_NUM,  '결제완료');
        END IF ;

        -- DELETE 이벤트 발생시 로그 남기기
        IF DELETING THEN
        INSERT INTO PAYMENT_LOG
                                (PAYMENT_UID, CUSTOMER_ID, PAYMENT_CREDIT, TOTAL_PRICE, PAYMENT_DATE, RESERVATION_NUM, IUD)
        VALUES (:OLD.PAYMENT_UID, :OLD.CUSTOMER_ID, :OLD.PAYMENT_CREDIT,
                       :OLD.TOTAL_PRICE,  :OLD.PAYMENT_DATE, :OLD.RESERVATION_NUM,  '결제취소') ;
        END IF ;
END ;
/
ALTER TRIGGER "MDGUEST"."TRIGGER_IUD" ENABLE;
--------------------------------------------------------
--  Constraints for Table CUSTOMER
--------------------------------------------------------

  ALTER TABLE "MDGUEST"."CUSTOMER" ADD PRIMARY KEY ("CUSTOMER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MDGUEST"."CUSTOMER" MODIFY ("CUSTOMER_TEL" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."CUSTOMER" MODIFY ("CUSTOMER_NAME" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."CUSTOMER" MODIFY ("CUSTOMER_PW" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table HALL_INFO
--------------------------------------------------------

  ALTER TABLE "MDGUEST"."HALL_INFO" ADD PRIMARY KEY ("CONCERT_NUM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MDGUEST"."HALL_INFO" MODIFY ("SEAT_SUM" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."HALL_INFO" MODIFY ("HALL_LOCATION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PAYMENT
--------------------------------------------------------

  ALTER TABLE "MDGUEST"."PAYMENT" ADD PRIMARY KEY ("PAYMENT_UID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MDGUEST"."PAYMENT" MODIFY ("RESERVATION_NUM" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."PAYMENT" MODIFY ("PAYMENT_DATE" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."PAYMENT" MODIFY ("TOTAL_PRICE" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."PAYMENT" MODIFY ("PAYMENT_CREDIT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SCHEDULE_INFO
--------------------------------------------------------

  ALTER TABLE "MDGUEST"."SCHEDULE_INFO" ADD PRIMARY KEY ("CONCERT_NUM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MDGUEST"."SCHEDULE_INFO" MODIFY ("CONCERT_NAME" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."SCHEDULE_INFO" MODIFY ("HALL_NUM" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."SCHEDULE_INFO" MODIFY ("CONCERT_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SEAT_INFO
--------------------------------------------------------

  ALTER TABLE "MDGUEST"."SEAT_INFO" ADD PRIMARY KEY ("SEAT_NUM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MDGUEST"."SEAT_INFO" MODIFY ("HAVESEAT" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."SEAT_INFO" MODIFY ("SEAT_PRICE" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."SEAT_INFO" MODIFY ("CONCERT_NUM" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."SEAT_INFO" MODIFY ("SEAT_GRADE" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."SEAT_INFO" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TICKET
--------------------------------------------------------

  ALTER TABLE "MDGUEST"."TICKET" ADD PRIMARY KEY ("TICKET_NUM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MDGUEST"."TICKET" MODIFY ("RESERVATION_NUM" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."TICKET" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."TICKET" MODIFY ("SEAT_PRICE" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."TICKET" MODIFY ("SEAT_NUM" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."TICKET" MODIFY ("HALL_NUM" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."TICKET" MODIFY ("CONCERT_NUM" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."TICKET" MODIFY ("CONCERT_NAME" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."TICKET" MODIFY ("CONCERT_DATE" NOT NULL ENABLE);
  ALTER TABLE "MDGUEST"."TICKET" MODIFY ("PAYMENT_UID" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table PAYMENT
--------------------------------------------------------

  ALTER TABLE "MDGUEST"."PAYMENT" ADD FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "MDGUEST"."CUSTOMER" ("CUSTOMER_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SCHEDULE_INFO
--------------------------------------------------------

  ALTER TABLE "MDGUEST"."SCHEDULE_INFO" ADD FOREIGN KEY ("CONCERT_NUM")
	  REFERENCES "MDGUEST"."HALL_INFO" ("CONCERT_NUM") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SEAT_INFO
--------------------------------------------------------

  ALTER TABLE "MDGUEST"."SEAT_INFO" ADD FOREIGN KEY ("CONCERT_NUM")
	  REFERENCES "MDGUEST"."HALL_INFO" ("CONCERT_NUM") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TICKET
--------------------------------------------------------

  ALTER TABLE "MDGUEST"."TICKET" ADD FOREIGN KEY ("PAYMENT_UID")
	  REFERENCES "MDGUEST"."PAYMENT" ("PAYMENT_UID") ON DELETE CASCADE ENABLE;
  ALTER TABLE "MDGUEST"."TICKET" ADD FOREIGN KEY ("CONCERT_NUM")
	  REFERENCES "MDGUEST"."SCHEDULE_INFO" ("CONCERT_NUM") ON DELETE CASCADE ENABLE;
  ALTER TABLE "MDGUEST"."TICKET" ADD FOREIGN KEY ("SEAT_NUM")
	  REFERENCES "MDGUEST"."SEAT_INFO" ("SEAT_NUM") ON DELETE CASCADE ENABLE;
